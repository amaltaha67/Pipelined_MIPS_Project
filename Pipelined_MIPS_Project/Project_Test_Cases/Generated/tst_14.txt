Test case 14 -> load word new (lwn) and store byte

code : 

module tst_14; 
	reg [31:0]PC_VALUE_;		  
	reg [31:0] cycle;
	Top top(PC_VALUE_);
	initial begin
      
		PC_VALUE_ <= 1500;	  
		cycle <= 1;
	end				   
	always @(posedge top.clk) begin	
     
      if (cycle== 9)	
begin
   $display("PC: %d",top.program_counter);	
		$display("cycle: %d" , cycle);
					   
  $display("$t0: %d" , top.regFile.registers_i[8], " The correct value is 3");
  $display("$t1: %d" , top.regFile.registers_i[9], " The correct value is 8");
  $display("$t2: %d" , top.regFile.registers_i[10], " The correct value is 3");
  $display("$t3: %d" , top.regFile.registers_i[11], " The correct value is 11");
		
		$finish;
		end
		cycle = cycle + 1;
	end
endmodule

InsMemory input: 

 mem[1500] <= 8'b00100100; // addi $t0,zero,3
      mem[1501] <= 8'b00001000;
      mem[1502] <= 8'b00000000;
      mem[1503] <= 8'b00000011;
      
      mem[1504] <= 8'b00100100; // addi $t1,zero,8
      mem[1505] <= 8'b00001001;
      mem[1506] <= 8'b00000000;
      mem[1507] <= 8'b00001000;
       
      mem[1508] <= 8'b00100100; // addi $t3,zero,11
      mem[1509] <= 8'b00001011;
      mem[1510] <= 8'b00000000;
      mem[1511] <= 8'b00001011;
          
      mem[1512] <= 8'b10100000;  //sb   $t0,8($0)
      mem[1513] <= 8'b00001000;
      mem[1514] <= 8'b00000000;
      mem[1515] <= 8'b00001000;
            
      mem[1516] <= 8'b00001100;  //lwn   $zero, $t1, $t2
      mem[1517] <= 8'b00001010;
      mem[1518] <= 8'b01001000;
      mem[1519] <= 8'b00100001;

TEST OUTPUT 

PC:       1532
cycle:          9
$t0:          3 The correct value is 3
$t1:          8 The correct value is 8
$t2:          3 The correct value is 3
$t3:         11 The correct value is 11
